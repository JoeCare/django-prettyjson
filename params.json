{
  "name": "django-prettyjson",
  "tagline": "Enables pretty JSON viewer in Django forms, admin, or templates",
  "body": "# django-prettyjson\r\n\r\n[![PyPi Version](https://badge.fury.io/py/django-prettyjson.png)](https://badge.fury.io/py/django-prettyjson) [![Build Status](https://travis-ci.org/kevinmickey/django-prettyjson.svg?branch=master)](https://travis-ci.org/kevinmickey/django-prettyjson)\r\n\r\nEnables pretty JSON viewer in Django forms, admin, or templates\r\n\r\n## Installation\r\n\r\nAt the command line::\r\n\r\n```sh\r\npip install django-prettyjson\r\n```\r\n\r\n## Usage\r\n\r\nIn a form or admin of a model, enable a pretty JSON viewer for a particular field:\r\n\r\n```python\r\nimport prettyjson\r\n\r\nclass JsonForm(forms.ModelForm):\r\n  class Meta:\r\n    model = Test\r\n    fields = '__all__'\r\n    widgets = {\r\n      'myjsonfield': PrettyJSONWidget(),\r\n    }\r\n\r\nclass JsonAdmin(admin.ModelAdmin):\r\n  form = JsonAdminForm\r\n```\r\n\r\nEnable pretty JSON viewer for every JSONField of a model:\r\n\r\n```python\r\nclass JsonAdmin(admin.ModelAdmin):\r\n  formfield_overrides = {\r\n    jsonfield.JSONField: {'widget': PrettyJSONWidget }\r\n  }\r\n```\r\n\r\nIn templates, you can also enable a pretty JSON viewer.  Use the `prettyjson` template tag with a string JSON or with objects (dicts, QuerySets, etc.) that can be serialized to a JSON.  Note that the template tag must be loaded using `{% load prettyjson %}`.  It also has CSS and JS that must be included using `{% prettyjson_setup %}`.\r\n\r\n```htmldjango\r\n{% extends \"base.html\" %}\r\n\r\n{% load prettyjson %}\r\n\r\n{% block header %}\r\n  {{ block.super }}\r\n  {% prettyjson_setup %}\r\n{% endblock %}\r\n\r\n{% block content %}\r\n  {% prettyjson myqueryset %}\r\n  {% prettyjson mydict %}\r\n  {% prettyjson '{\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"明日がある。\", \"link\": \"http://jsonview.com\", \"notLink\": \"http://jsonview.com is great\"}' %}\r\n  {% prettyjson '{}' %}\r\n{% endblock %}\r\n```\r\n\r\n## Running Tests\r\n\r\nIn development.\r\n\r\n```sh\r\nsource <YOURVIRTUALENV>/bin/activate\r\n(myenv) $ pip install -r requirements-test.txt\r\n(myenv) $ python runtests.py\r\n```\r\n\r\n## Credits\r\n\r\nDependencies, parts of code, and/or sources of inspiration:\r\n\r\n* [jQuery JSONView](https://github.com/yesmeck/jquery-jsonview)\r\n* [django-jsonfield](https://github.com/bradjasper/django-jsonfield/)\r\n\r\n\r\nTools used in developing, testing, and/or rendering this package:\r\n\r\n* [Cookiecutter](https://github.com/audreyr/cookiecutter)\r\n* [cookiecutter-djangopackage] (https://github.com/pydanny/cookiecutter-djangopackage)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}